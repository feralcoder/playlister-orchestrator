heat_template_version: 2015-10-15

description: A Group of Load Balanced Servers

parameters:

  private_network:
    type: string
    description: Network used by the servers
    default: admin1-net
    constraints:
    - custom_constraint: neutron.network
  public_network:
    type: string
    description: Network used by the load balancer
    default: pubnet1
    constraints:
    - custom_constraint: neutron.network
  vip_subnet:
    type: string
    description: Subnet on which the load balancer will be located
    constraints:
    default: pubnet1
    - custom_constraint: neutron.subnet
  fe_vip:
    type: string
    description: IP of frontend VIP
    constraints:
    default: "172.30.1.11"
  olap_vip:
    type: string
    description: IP of OLAP VIP
    constraints:
    default: "172.30.1.21"
  oltp_vip:
    type: string
    description: IP of OLTP VIP
    constraints:
    default: "172.30.1.31"

resources:
  monitor:
    type: OS::Octavia::HealthMonitor
    properties:
      delay: 3
      type: HTTP
      timeout: 3
      max_retries: 3
      pool: { get_resource: pool }

  fe_80_pool:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: HTTP
      listener: { get_resource: fe_80_listener }
  fe_8080_pool:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: HTTP
      listener: { get_resource: fe_8080_listener }
  fe_443_pool:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: HTTPS
      listener: { get_resource: fe_443_listener }

  fe_80_listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: fe_loadbalancer }
      protocol: HTTP
      protocol_port: 80
  fe_8080_listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: fe_loadbalancer }
      protocol: HTTP
      protocol_port: 8080
  fe_443_listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: fe_loadbalancer }
      protocol: HTTPS
      protocol_port: 443

  fe_loadbalancer:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get_param: public_network }
      vip_address: { get_param: fe_vip }

  olap_3306_pool:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: TCP
      listener: { get_resource: olap_3306_listener }
  olap_3306_listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: olap_loadbalancer }
      protocol: TCP
      protocol_port: 3306

  olap_loadbalancer:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get_param: public_network }
      vip_address: { get_param: olap_vip }

  oltp_3306_pool:
    type: OS::Octavia::Pool
    properties:
      lb_algorithm: ROUND_ROBIN
      protocol: TCP
      listener: { get_resource: oltp_3306_listener }
  oltp_3306_listener:
    type: OS::Octavia::Listener
    properties:
      loadbalancer: { get_resource: oltp_loadbalancer }
      protocol: TCP
      protocol_port: 3306

  oltp_loadbalancer:
    type: OS::Octavia::LoadBalancer
    properties:
      vip_subnet: { get_param: public_network }
      vip_address: { get_param: oltp_vip }


#  floating_ip:
#    type: OS::Neutron::FloatingIP
#    properties:
#      floating_network: { get_param: public_network }
#      fixed_ip_address: { get_param: fe_vip }

#outputs:
#
#  lburl:
#    value:
#      str_replace:
#        template: http://IP_ADDRESS:PORT
#        params:
#          IP_ADDRESS: { get_attr: [ floating_ip, floating_ip_address ] }
#          PORT: { get_param: lb_port }
#    description: >
#      This URL is the "external" URL that can be used to access the
#      load balancer.

